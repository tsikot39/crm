[
  "[AppRunner] Starting to deploy your application source code.",
  "[AppRunner] Starting to build your application source code.",
  "[PreBuild] Sending build context to Docker daemon  1.598MB\r\r\n",
  "[PreBuild] Step 1/3 : FROM 380155284058.dkr.ecr.us-west-2.amazonaws.com/awsfusionruntime-nodejs18-build:uuid-nodejs18-20250625-203652-80 AS pre-build-stage\n",
  "[PreBuild] uuid-nodejs18-20250625-203652-80: Pulling from awsfusionruntime-nodejs18-build\n",
  "[PreBuild] a00db81cfbfc: Pulling fs layer\n",
  "[PreBuild] 14569ce42c43: Pulling fs layer\n",
  "[PreBuild] 1dbe7aeef389: Pulling fs layer\n",
  "[PreBuild] 1dbe7aeef389: Verifying Checksum\n",
  "[PreBuild] 1dbe7aeef389: Download complete\n",
  "[PreBuild] a00db81cfbfc: Verifying Checksum\n",
  "[PreBuild] a00db81cfbfc: Download complete\n",
  "[PreBuild] 14569ce42c43: Verifying Checksum\n",
  "[PreBuild] 14569ce42c43: Download complete\n",
  "[PreBuild] a00db81cfbfc: Pull complete\n",
  "[PreBuild] 14569ce42c43: Pull complete\n",
  "[PreBuild] 1dbe7aeef389: Pull complete\n",
  "[PreBuild] Digest: sha256:d03e16bb4c2bdb4c1315b6b096021f3eda7181cb7b67709435c1691dee779d99\n",
  "[PreBuild] Status: Downloaded newer image for 380155284058.dkr.ecr.us-west-2.amazonaws.com/awsfusionruntime-nodejs18-build:uuid-nodejs18-20250625-203652-80\n",
  "[PreBuild]  ---> d6a0a3e612bd\n",
  "[PreBuild] Step 2/3 : COPY . /app\n",
  "[PreBuild]  ---> 9b40737f4c62\n",
  "[PreBuild] Step 3/3 : WORKDIR /app//services/api-gateway\n",
  "[PreBuild]  ---> Running in 6d127f440f94\n",
  "[PreBuild] Removing intermediate container 6d127f440f94\n",
  "[PreBuild]  ---> 53060ae77559\n",
  "[PreBuild] Successfully built 53060ae77559\n",
  " ",
  "[Build] Sending build context to Docker daemon  1.598MB\r\r\n",
  "[Build] Step 1/6 : FROM 380155284058.dkr.ecr.us-west-2.amazonaws.com/awsfusionruntime-nodejs18-build:uuid-nodejs18-20250625-203652-80 AS pre-build-stage\n",
  "[Build]  ---> d6a0a3e612bd\n",
  "[Build] Step 2/6 : COPY . /app\n",
  "[Build]  ---> Using cache\n",
  "[Build]  ---> 9b40737f4c62\n",
  "[Build] Step 3/6 : WORKDIR /app//services/api-gateway\n",
  "[Build]  ---> Using cache\n",
  "[Build]  ---> 53060ae77559\n",
  "[Build] Step 4/6 : FROM pre-build-stage as build-stage\n",
  "[Build]  ---> 53060ae77559\n",
  "[Build] Step 5/6 : WORKDIR /app//services/api-gateway\n",
  "[Build]  ---> Running in a1decbdb59f2\n",
  "[Build] Removing intermediate container a1decbdb59f2\n",
  "[Build]  ---> db554b72f74e\n",
  "[Build] Step 6/6 : RUN npm install && npm run build\n",
  "[Build]  ---> Running in ca7729861760\n",
  "[Build] \u001b[91mnpm warn workspaces @crm-saas/api-gateway in filter set, but no workspace folder present\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'vite@7.0.6',\n",
  "[Build] npm warn EBADENGINE   required: { node: '^20.19.0 || >=22.12.0' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'rimraf@6.0.1',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'glob@11.0.3',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'jackspeak@4.1.1',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'minimatch@10.0.3',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'path-scurry@2.0.0',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: 'lru-cache@11.1.0',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: '@isaacs/brace-expansion@5.0.0',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn EBADENGINE Unsupported engine {\n",
  "[Build] npm warn EBADENGINE   package: '@isaacs/balanced-match@4.0.1',\n",
  "[Build] npm warn EBADENGINE   required: { node: '20 || >=22' },\n",
  "[Build] npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }\n",
  "[Build] npm warn EBADENGINE }\n",
  "[Build] \u001b[0m\u001b[91mnpm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\n",
  "[Build] \u001b[0m\u001b[91mnpm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported\n",
  "[Build] \u001b[0m\n",
  "[Build] > crm-saas-platform@1.0.0 postinstall\n",
  "[Build] > npm run prisma:generate\n",
  "[Build] > crm-saas-platform@1.0.0 prisma:generate\n",
  "[Build] > cd shared/database && npx prisma generate\n",
  "[Build] \u001b[91mnpm warn exec The following package was not found and will be installed: prisma@6.14.0\n",
  "[Build] \u001b[0mPrisma schema loaded from prisma/schema.prisma\n",
  "[Build] ✔ Installed the @prisma/client and prisma packages in your project\n",
  "[Build] ✔ Generated Prisma Client (v6.14.0) to ./node_modules/.prisma/client in 230ms\n",
  "[Build] Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)\n",
  "[Build] Tip: Want to turn off tips and other hints? https://pris.ly/tip-4-nohints\n",
  "[Build] added 704 packages, and audited 706 packages in 2m\n",
  "[Build] 94 packages are looking for funding\n",
  "[Build]   run `npm fund` for details\n",
  "[Build] found 0 vulnerabilities\n",
  "[Build] \u001b[91mnpm notice\n",
  "[Build] npm notice New major version of npm available! 10.8.2 -> 11.5.2\n",
  "[Build] npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.5.2\n",
  "[Build] npm notice To update run: npm install -g npm@11.5.2\n",
  "[Build] npm notice\n",
  "[Build] \u001b[0m\n",
  "[Build] > @crm-saas/api-gateway@1.0.0 build\n",
  "[Build] > tsc\n",
  "[Build] src/index.ts(11,8): error TS6059: File '/app/shared/database/mongodb.ts' is not under 'rootDir' '/app/services/api-gateway/src'. 'rootDir' is expected to contain all source files.\n",
  "[Build]   The file is in the program because:\n",
  "[Build]     Imported via \"../../../shared/database/mongodb\" from file '/app/services/api-gateway/src/index.ts'\n",
  "[Build]     Imported via \"./mongodb\" from file '/app/shared/database/repositories.ts'\n",
  "[Build]     Imported via \"../../../../shared/database/mongodb\" from file '/app/services/api-gateway/src/routes/health.ts'\n",
  "[Build] src/index.ts(82,23): error TS2769: No overload matches this call.\n",
  "[Build]   The last overload gave the following error.\n",
  "[Build]     Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]       Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]         Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]           Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]             Types of property 'user' are incompatible.\n",
  "[Build]               Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]                 Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/index.ts(83,26): error TS2769: No overload matches this call.\n",
  "[Build]   The last overload gave the following error.\n",
  "[Build]     Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]       Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]         Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]           Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]             Types of property 'user' are incompatible.\n",
  "[Build]               Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]                 Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/index.ts(84,23): error TS2769: No overload matches this call.\n",
  "[Build]   The last overload gave the following error.\n",
  "[Build]     Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]       Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]         Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]           Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]             Types of property 'user' are incompatible.\n",
  "[Build]               Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]                 Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/index.ts(85,28): error TS2769: No overload matches this call.\n",
  "[Build]   The last overload gave the following error.\n",
  "[Build]     Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]       Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n",
  "[Build]         Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]           Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]             Types of property 'user' are incompatible.\n",
  "[Build]               Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]                 Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/activities.ts(10,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/activities.ts(28,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/auth_backup.ts(9,24): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(10,14): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(11,13): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(12,10): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(13,13): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(14,21): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(19,21): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(20,10): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(21,13): error TS2304: Cannot find name 'z'.\n",
  "[Build] src/routes/auth_backup.ts(25,30): error TS2304: Cannot find name 'UserDocument'.\n",
  "[Build] src/routes/auth_backup.ts(28,10): error TS2304: Cannot find name 'jwt'.\n",
  "[Build] src/routes/auth_backup.ts(48,32): error TS2304: Cannot find name 'userRepository'.\n",
  "[Build] src/routes/auth_backup.ts(50,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(60,31): error TS2304: Cannot find name 'organizationRepository'.\n",
  "[Build] src/routes/auth_backup.ts(64,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(69,34): error TS2304: Cannot find name 'bcrypt'.\n",
  "[Build] src/routes/auth_backup.ts(74,9): error TS2304: Cannot find name 'OrganizationDocument'.\n",
  "[Build] src/routes/auth_backup.ts(93,37): error TS2304: Cannot find name 'organizationRepository'.\n",
  "[Build] src/routes/auth_backup.ts(96,28): error TS2304: Cannot find name 'UserDocument'.\n",
  "[Build] src/routes/auth_backup.ts(111,29): error TS2304: Cannot find name 'userRepository'.\n",
  "[Build] src/routes/auth_backup.ts(116,7): error TS2304: Cannot find name 'logger'.\n",
  "[Build] src/routes/auth_backup.ts(146,7): error TS2304: Cannot find name 'logger'.\n",
  "[Build] src/routes/auth_backup.ts(147,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(159,24): error TS2304: Cannot find name 'userRepository'.\n",
  "[Build] src/routes/auth_backup.ts(161,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(166,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(170,35): error TS2304: Cannot find name 'bcrypt'.\n",
  "[Build] src/routes/auth_backup.ts(172,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(176,11): error TS2304: Cannot find name 'userRepository'.\n",
  "[Build] src/routes/auth_backup.ts(179,32): error TS2304: Cannot find name 'organizationRepository'.\n",
  "[Build] src/routes/auth_backup.ts(183,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(189,5): error TS2304: Cannot find name 'logger'.\n",
  "[Build] src/routes/auth_backup.ts(228,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(235,23): error TS2304: Cannot find name 'jwt'.\n",
  "[Build] src/routes/auth_backup.ts(243,26): error TS2304: Cannot find name 'userRepository'.\n",
  "[Build] src/routes/auth_backup.ts(245,15): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(248,34): error TS2304: Cannot find name 'organizationRepository'.\n",
  "[Build] src/routes/auth_backup.ts(252,15): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/auth_backup.ts(278,13): error TS2304: Cannot find name 'createApiError'.\n",
  "[Build] src/routes/companies.ts(58,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(140,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(201,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(255,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(322,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(396,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(435,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(590,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/companies.ts(669,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/contacts.ts(28,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/contacts.ts(78,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/contacts.ts(103,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/contacts.ts(145,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/contacts.ts(176,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/deals.ts(10,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/deals.ts(82,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/deals.ts(97,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/deals.ts(115,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/deals.ts(132,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/users.ts(10,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/routes/users.ts(28,16): error TS2345: Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<void>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<...>'.\n",
  "[Build]   Types of parameters 'req' and 'req' are incompatible.\n",
  "[Build]     Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n",
  "[Build]       Types of property 'user' are incompatible.\n",
  "[Build]         Type 'User | undefined' is not assignable to type '{ id: string; organizationId: string; role: string; email: string; } | undefined'.\n",
  "[Build]           Type 'User' is missing the following properties from type '{ id: string; organizationId: string; role: string; email: string; }': id, organizationId, role, email\n",
  "[Build] src/services/authService.ts(7,8): error TS6059: File '/app/shared/database/repositories.ts' is not under 'rootDir' '/app/services/api-gateway/src'. 'rootDir' is expected to contain all source files.\n",
  "[Build]   The file is in the program because:\n",
  "[Build]     Imported via \"../../../../shared/database/repositories\" from file '/app/services/api-gateway/src/services/authService.ts'\n",
  "[Build]     Imported via \"../../../../shared/database/repositories\" from file '/app/services/api-gateway/src/routes/contacts.ts'\n",
  "[Build]     Imported via \"../../../../shared/database/repositories\" from file '/app/services/api-gateway/src/middleware/auth.ts'\n",
  "[Build] ../../shared/database/mongodb.ts(2,37): error TS6059: File '/app/shared/database/types.ts' is not under 'rootDir' '/app/services/api-gateway/src'. 'rootDir' is expected to contain all source files.\n",
  "[Build]   The file is in the program because:\n",
  "[Build]     Imported via \"./types\" from file '/app/shared/database/mongodb.ts'\n",
  "[Build]     Imported via \"./types\" from file '/app/shared/database/repositories.ts'\n",
  "[Build]     Imported via \"../../../../shared/database/types\" from file '/app/services/api-gateway/src/services/authService.ts'\n",
  "[Build]     Imported via \"../../../../shared/database/types\" from file '/app/services/api-gateway/src/routes/contacts.ts'\n",
  "[Build] ../../shared/database/repositories.ts(81,7): error TS2769: No overload matches this call.\n",
  "[Build]   Overload 1 of 4, '(filter: Filter<any>, update: Document[] | UpdateFilter<any>, options: FindOneAndUpdateOptions & { includeResultMetadata: true; }): Promise<...>', gave the following error.\n",
  "[Build]     Argument of type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to parameter of type 'Document[] | UpdateFilter<any>'.\n",
  "[Build]       Type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to type 'UpdateFilter<any>'.\n",
  "[Build]         Type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to type '{ $currentDate?: Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined; $inc?: Record<string, NumericType | undefined> | undefined; ... 12 more ...; $bit?: Record<...> | ... 2 more ... | undefined; }'.\n",
  "[Build]           Types of property '$currentDate' are incompatible.\n",
  "[Build]             Type 'IsAny<T[keyof T], Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }>, AcceptedFields<T, Date | Timestamp, true | { ...; }> & NotAcceptedFields<...> & Record<...>> | undefined' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]               Type 'IsAny<T[keyof T], Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }>, AcceptedFields<T, Date | Timestamp, true | { ...; }> & NotAcceptedFields<...> & Record<...>>' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                 Type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | (AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<...> & Record<...>)' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                   Type 'AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<T, Date | Timestamp> & Record<...>' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                     Type 'AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<T, Date | Timestamp> & Record<...>' is not assignable to type 'Record<string, { $type: \"date\" | \"timestamp\"; }>'.\n",
  "[Build]                       'string' index signatures are incompatible.\n",
  "[Build]                         Type 'true | { $type: \"date\" | \"timestamp\"; }' is not assignable to type '{ $type: \"date\" | \"timestamp\"; }'.\n",
  "[Build]                           Type 'boolean' is not assignable to type '{ $type: \"date\" | \"timestamp\"; }'.\n",
  "[Build]   Overload 2 of 4, '(filter: Filter<any>, update: Document[] | UpdateFilter<any>, options: FindOneAndUpdateOptions & { includeResultMetadata: false; }): Promise<...>', gave the following error.\n",
  "[Build]     Argument of type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to parameter of type 'Document[] | UpdateFilter<any>'.\n",
  "[Build]       Type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to type 'UpdateFilter<any>'.\n",
  "[Build]         Type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to type '{ $currentDate?: Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined; $inc?: Record<string, NumericType | undefined> | undefined; ... 12 more ...; $bit?: Record<...> | ... 2 more ... | undefined; }'.\n",
  "[Build]           Types of property '$currentDate' are incompatible.\n",
  "[Build]             Type 'IsAny<T[keyof T], Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }>, AcceptedFields<T, Date | Timestamp, true | { ...; }> & NotAcceptedFields<...> & Record<...>> | undefined' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]               Type 'IsAny<T[keyof T], Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }>, AcceptedFields<T, Date | Timestamp, true | { ...; }> & NotAcceptedFields<...> & Record<...>>' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                 Type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | (AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<...> & Record<...>)' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                   Type 'AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<T, Date | Timestamp> & Record<...>' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                     Type 'AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<T, Date | Timestamp> & Record<...>' is not assignable to type 'Record<string, { $type: \"date\" | \"timestamp\"; }>'.\n",
  "[Build]                       'string' index signatures are incompatible.\n",
  "[Build]                         Type 'true | { $type: \"date\" | \"timestamp\"; }' is not assignable to type '{ $type: \"date\" | \"timestamp\"; }'.\n",
  "[Build]                           Type 'boolean' is not assignable to type '{ $type: \"date\" | \"timestamp\"; }'.\n",
  "[Build]   Overload 3 of 4, '(filter: Filter<any>, update: Document[] | UpdateFilter<any>, options: FindOneAndUpdateOptions): Promise<any>', gave the following error.\n",
  "[Build]     Argument of type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to parameter of type 'Document[] | UpdateFilter<any>'.\n",
  "[Build]       Type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to type 'UpdateFilter<any>'.\n",
  "[Build]         Type '{ $set: { updatedAt: Date; _id?: Partial<T>[\"_id\"] | undefined; createdAt?: Partial<T>[\"createdAt\"] | undefined; organizationId?: Partial<T>[\"organizationId\"] | undefined; }; ... 13 more ...; $bit?: IsAny<...> | undefined; }' is not assignable to type '{ $currentDate?: Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined; $inc?: Record<string, NumericType | undefined> | undefined; ... 12 more ...; $bit?: Record<...> | ... 2 more ... | undefined; }'.\n",
  "[Build]           Types of property '$currentDate' are incompatible.\n",
  "[Build]             Type 'IsAny<T[keyof T], Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }>, AcceptedFields<T, Date | Timestamp, true | { ...; }> & NotAcceptedFields<...> & Record<...>> | undefined' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]               Type 'IsAny<T[keyof T], Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }>, AcceptedFields<T, Date | Timestamp, true | { ...; }> & NotAcceptedFields<...> & Record<...>>' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                 Type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | (AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<...> & Record<...>)' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                   Type 'AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<T, Date | Timestamp> & Record<...>' is not assignable to type 'Record<string, true> | Record<string, { $type: \"date\" | \"timestamp\"; }> | undefined'.\n",
  "[Build]                     Type 'AcceptedFields<T, Date | Timestamp, true | { $type: \"date\" | \"timestamp\"; }> & NotAcceptedFields<T, Date | Timestamp> & Record<...>' is not assignable to type 'Record<string, { $type: \"date\" | \"timestamp\"; }>'.\n",
  "[Build]                       'string' index signatures are incompatible.\n",
  "[Build]                         Type 'true | { $type: \"date\" | \"timestamp\"; }' is not assignable to type '{ $type: \"date\" | \"timestamp\"; }'.\n",
  "[Build]                           Type 'boolean' is not assignable to type '{ $type: \"date\" | \"timestamp\"; }'.\n",
  "[Build] \u001b[91mnpm error Lifecycle script `build` failed with error:\n",
  "[Build] \u001b[0m\u001b[91mnpm error code 2\n",
  "[Build] \u001b[0m\u001b[91mnpm error path /app/services/api-gateway\n",
  "[Build] \u001b[0m\u001b[91mnpm error workspace @crm-saas/api-gateway@1.0.0\n",
  "[Build] \u001b[0m\u001b[91mnpm error location /app/services/api-gateway\n",
  "[Build] \u001b[0m\u001b[91mnpm error command failed\n",
  "[Build] \u001b[0m\u001b[91mnpm error command sh -c tsc\n",
  "[Build] \u001b[0mThe command '/bin/sh -c npm install && npm run build' returned a non-zero code: 2\n",
  "[AppRunner] Failed to build your application source code. Reason: Failed to execute 'build' command.",
  "[AppRunner] Failed to deploy your application source code."
]